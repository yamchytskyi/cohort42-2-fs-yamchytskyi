Поток Stream

1 Создать поток из источника, например из коллекции
2 Указать одну или несколько промежуточных операций (filter, sorted, distinct)
3 Завершить поток терминальной операцией (collect)


Промежуточные операции:
filter оставляет только те элементы для которых предикат возвращает true
map преобразует каждый элемент потока в новый элемент
flatMap применяется при необходимости преобразовать каждый элемент в поток элементов, а затем обьединить все в один общий поток
distinct удаляет дубликаты используя equals(), оставляя уникальные элементы
sorted сортирует элементы в естественном порядке
limit ограничивает поток первыми элементами

Терминальные операции
collect собирает элементы в единую структуру, напрмер в List и выполняет роль агрегатора Collectors.toList()  Collectors.toSet
count возвращает количество элементов в потоке long
min max возвращает минимальный или максимальный элемент потока

Матчинговые операции
anyMatch вернет true если хотя бы один элемент true
allMatch вернет true если все элемент true
noneMatch вернет true если ни один из элементов не удовлетворяет условию




Когда использовать Stream API
1. Источник данных --> коллекция или обьект, содержащий элементы
2. Выполнение преобразований --> фильтрация, сортировка, мэппинг и иные подобные операции
3. Сохранение результата --> сохранение в новый обьект (лист или хранилище)






